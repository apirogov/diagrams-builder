name:                diagrams-builder
version:             2.0.0.0
synopsis:            hint-based build service for the diagrams graphics EDSL.

description:
  @diagrams-builder@ provides backend-agnostic tools for dynamically
  turning code into rendered diagrams, using the @hint@ wrapper to the
  GHC API.  It supports conditional recompilation using hashing of
  diagrams source code, to avoid recompiling code that has not changed.
  It is useful for creating tools which compile diagrams code embedded
  in other documents.  For example, it is used by the
  @BlogLiterately-diagrams@ package (a plugin for @BlogLiterately@) to
  compile diagrams embedded in Markdown-formatted blog posts.
  .
  Executables specific to the cairo, SVG, and postscript backends are
  included (more executables specific to other backends may be included
  in the future).  All take an input file and an expression to render,
  and output an image file.  If you want these executables you must
  explicitly enable the @-fcairo@, @-fsvg@, or @-fps@ flags.
  .
  A LaTeX package, @diagrams-latex.sty@, is also provided in the
  @latex/@ directory of the source distribution, which renders diagrams
  code found within @diagram@ environments. Note that
  @diagrams-latex.sty@ is licensed under the GPL.

homepage:            http://projects.haskell.org/diagrams
license:             BSD3
license-file:        LICENSE
extra-source-files:  CHANGES.markdown, README.markdown, latex/diagrams-latex.sty
author:              Brent Yorgey
maintainer:          diagrams-discuss@googlegroups.com
category:            Graphics
build-type:          Simple
cabal-version:       >=1.10
tested-with:         GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.3
bug-reports:         https://github.com/diagrams/diagrams-builder/issues
Source-repository head
  type:     git
  location: https://github.com/diagrams/diagrams-builder

library
  exposed-modules:
    Diagrams.Builder
    Diagrams.Builder.Opts
    Diagrams.Builder.Modules
  build-depends:
    base,
    mtl,
    diagrams,
    hint,
    directory,
    filepath,
    transformers,
    haskell-src-exts,
    haskell-src-exts-simple,
    split,
    lens,
    hashable,
    exceptions,
    optparse-applicative,
    temporary
  hs-source-dirs:      src
  default-language:    Haskell2010
  other-extensions:
    StandaloneDeriving DeriveDataTypeable ScopedTypeVariables
    FlexibleContexts
  ghc-options:      -Wall

executable diagrams-builder
  main-is: diagrams-builder.hs
  hs-source-dirs: src/tools
  default-language: Haskell2010
  build-depends:     base >= 4 && < 5,
                     filepath,
                     directory,
                     diagrams-builder,
                     optparse-applicative,
                     diagrams,
                     lens
